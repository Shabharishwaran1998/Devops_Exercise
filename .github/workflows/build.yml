name: Build

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [16, 18]

    name: Build on Node.js ${{ matrix.node }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: npm ci

      - name: Compile project
        run: npm run build
      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-node-${{ matrix.node }}
          path: dist/

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [16, 18]

    name: Test on Node.js ${{ matrix.node }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
  docker:
    needs: build
    runs-on: ubuntu-latest
    name: Docker build and push (Node 18 only)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download dist from Node 18 build
        uses: actions/download-artifact@v4
        with:
          name: dist-node-18
          path: dist/

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          ls -la
          ls -la dist
          docker build -t ${{ secrets.DOCKER_USERNAME }}/node-ts-ci-example:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/node-ts-ci-example:latest
      
  
